Implement FileDescriptor properly, with stashing/unstashing of file
descriptors in encoder/decoder state.

Figure out an approach to fuzz Marshal/Unmarshal.

Break up Marshaler/Unmarshaler interfaces a bit more. Signature is
only needed when encoding/decoding to a Variant or a message
body. AlignDBus is only necessary if the value ends up in an empty
array, for the weird start padding on zero-length arrays thing. Many
values could implement just MarshalDBus/UnmarshalDBus and live happily
ever after.

Better handling of nil embedded structs in marshal, I think right now
it'll just panic.

Combine struct and vardict into one uber-struct-and-vardict type.
Makes header work better, probably better ergonomics elsewhere too
for types that are trying to be "extensible structs".

finish implementing Conn for incoming calls and signals

make signature parsing/printing use structinfo, so that things like
"encode this map as an array" can be reflected.

skip struct padding for structs that are entirely vardict
encoded. Currently can't write a struct that is a pure vardict and use
it where dbus wants a dict, it'll get padded wrong.
