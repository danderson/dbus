Figure out an approach to fuzz Marshal/Unmarshal.

skip struct padding for structs that are entirely vardict
encoded. Currently can't write a struct that is a pure vardict and use
it where dbus wants a dict, it'll get padded wrong.

support encoding maps as either a{xy} or a(xy). Various dbus protocols
use the latter for some reason.

maybe allow unmarshaling a property into a *any, so people can get
properties of unknown type and then reflect on the output.

matcher logic needs to handle pointers properly, throughout. I'm not
giving it any thought in the first pass while I nail down the API
shape.

Export fragment mapper funcs for people doing custom encoding stuff.
